"""changes password_hash to password

Revision ID: bb1c33ad6bb9
Revises: 5d41eef3dfb6
Create Date: 2024-06-29 23:08:51.069642

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'bb1c33ad6bb9'
down_revision = '5d41eef3dfb6'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('reflections', schema=None) as batch_op:
        batch_op.alter_column('strategy_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('strategies', schema=None) as batch_op:
        batch_op.create_unique_constraint(batch_op.f('uq_strategies_name'), ['name'])

    with op.batch_alter_table('teachers', schema=None) as batch_op:
        batch_op.add_column(sa.Column('password', sa.String(), nullable=False))
        batch_op.create_unique_constraint(batch_op.f('uq_teachers_username'), ['username'])
        batch_op.drop_column('_password_hash')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('teachers', schema=None) as batch_op:
        batch_op.add_column(sa.Column('_password_hash', sa.VARCHAR(), nullable=False))
        batch_op.drop_constraint(batch_op.f('uq_teachers_username'), type_='unique')
        batch_op.drop_column('password')

    with op.batch_alter_table('strategies', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('uq_strategies_name'), type_='unique')

    with op.batch_alter_table('reflections', schema=None) as batch_op:
        batch_op.alter_column('strategy_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    # ### end Alembic commands ###
